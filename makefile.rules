##############################################################
#
# This file includes all the test targets as well as all the
# non-default build rules and test recipes.
#
##############################################################


##############################################################
#
# Test targets
#
##############################################################

###### Place all generic definitions here ######

# This defines tests which run tools of the same name.  This is simply for convenience to avoid
# defining the test name twice (once in TOOL_ROOTS and again in TEST_ROOTS).
# Tests defined here should not be defined in TOOL_ROOTS and TEST_ROOTS.
TEST_TOOL_ROOTS := MAPProfiler

##############################################################
#
# Build rules
#
##############################################################

# See makefile.default.rules for the default build rules.
TOOL_CXXFLAGS += -DSDE_INIT -DPINPLAY -I$(PINPLAY_ROOT)/include
TOOL_CXXFLAGS := -I$(ALIF_IDIR) -I$(SDE_ROOT)/include $(TOOL_CXXFLAGS)

ifeq ($(OS),Windows_NT)
TOOL_LPATHS += /LIBPATH:$(SDE_ROOT)/lib/$(TARGET) /LIBPATH:$(PINPLAY_ROOT)/$(TARGET)
TOOL_LPATHS += libpinplay.lib libsde.lib bz2.lib zlib.lib
else
# sde and pinplay libraries appears twice to avoid circular dependency
TOOL_LPATHS += -L$(SDE_ROOT)/lib/$(TARGET) -L$(PINPLAY_ROOT)/$(TARGET)
TOOL_LPATHS += -lpinplay -lsde -lpinplay -lsde -lbz2 -lzlib
endif

# This defines any additional object files that need to be compiled.
ALIF_SRC := $(wildcard src/*.cpp)
ALIF_SRC_ROOTS := $(ALIF_SRC:%.cpp=% )
# ALIF_OBJS_TMP := $(subst src/,$(OBJDIR)src/,$(ALIF_SRC)) 
ALIF_OBJS_TMP := $(subst src/,$(OBJDIR),$(ALIF_SRC)) 
ALIF_OBJS := $(subst .cpp,.o,$(ALIF_OBJS_TMP))
OBJECT_ROOTS := $(ALIF_SRC_ROOTS)


###### Define the sanity subset ######

# This defines the list of tests that should run in sanity. It should include all the tests listed in
# TEST_TOOL_ROOTS and TEST_ROOTS excluding only unstable tests.
SANITY_SUBSET := $(TEST_TOOL_ROOTS) $(TEST_ROOTS)


TOOL_CXXFLAGS += -DDEBUG

# %{OBJ_SUFFIX}: src/%.cpp
# 	mkdir -p ${COMP_OBJ}
# $(CXX) ${MYDEFINES} ${COPT} $(TOOL_CXXFLAGS) $(CXXFLAGS) $(TOOL_INCLUDES) $(PIN_CXXFLAGS) ${COMP_OBJ}$@ $<
